@model WebAPILab.Models.HomeViewModel

<div class="dbresultstable container-customers">
    <table>
        <thead>
            <tr>
                <td>Name</td>
                <td>CustomerId</td>
                <td>Email</td>
                <td>Mobile</td>
                <td>TransactionCount</td>
            </tr>
        </thead>
        <tbody>
            @foreach (var item in Model.Customers)
            {
                <tr>
                    <td>@item.CustomerName</td>
                    <td>@item.CustomerId</td>
                    <td>@item.CustomerEmail</td>
                    <td>@item.MobileNo</td>
                    <td>@item.TransactionIds</td>
                </tr>
            }
        </tbody>
    </table>
</div>

<div class="dbresultstable container-transactions">
    <table>
        <thead>
            <tr>
                <td>TransactionId</td>
                <td>TransactionDateTime</td>
                <td>Amount</td>
                <td>CurrencyCode</td>
                <td>Status</td>
            </tr>
        </thead>
        <tbody>
            @foreach (var item in Model.Transactions)
            {
                <tr>
                    <td>@item.TransactionId</td>
                    <td>@item.TransactionDateTime</td>
                    <td>@item.Amount</td>
                    <td>@item.CurrencyCode</td>
                    <td>@item.Status</td>
                </tr>
            }
        </tbody>
    </table>
</div>

<div class="dbresultstable container-latestTransactions">
    @foreach (var customer in Model.Customers)
    {
    <table>
        <thead>
            <tr>
                <td>Customer</td>
                <td>TransactionDateTime</td>
            </tr>
        </thead>
        <tbody>
            @foreach (var transaction in customer.GetMostRecentTransactions(5))
            {
                <tr>
                    <td>@customer.CustomerName</td>
                    <td>@transaction.TransactionDateTime</td>
                </tr>
            }
            </tbody>
    </table>
    }
</div>

<div class="dbresultstable container-validCurrencies">
    <table>
        <thead>
            <tr>
                <td>TransactionId</td>
                <td>Currency</td>
                <td>Is Valid?</td>
            </tr>
        </thead>
        <tbody>
            @foreach (var transaction in Model.Transactions)
            {
                <tr>
                    <td>@transaction.TransactionId</td>
                    <td>@transaction.CurrencyCode</td>
                    <td>@transaction.IsValidCurrency(transaction.CurrencyCode)</td>
                </tr>
            }
        </tbody>
    </table>
</div>

<div class="container-queryCustomers">
    @using (Ajax.BeginForm("GetCustomerAsync", "Home", null, new AjaxOptions { HttpMethod = "GET" }))
    {
        @Html.AntiForgeryToken()
        @Html.Label("Customer ID: ")
        <input name="customerId" type="text" value="12456" />
        @Html.Label("Email: ")
        <input name="email" type="text" value="user3@domain.com" />
        <input type="submit" value="Query database" />
    }

    @using (Html.BeginForm(null, null, FormMethod.Post, new { id = "__AjaxAntiForgeryForm" }))
    {
        @Html.AntiForgeryToken()
        <div>
            Customer ID: <input type="text" class="clientCustomerId" value="12456" />
            Email: <input name="email" type="text" class="clientEmail" value="user3@domain.com" />
            <input type="button" class="queryOnClient" value="Query on client" />
            <div class="clientCallResult"></div>
        </div>
    }
</div>

<script>
    $(document).ready(function () {
        console.log("ready!");
        $(".queryOnClient").click(function () {
            $('.clientCallResult').text("Querying...")
            var customerId = $(".clientCustomerId").val();
            var email = $(".clientEmail").val();
            $.ajax({
                type: "GET",
                url: '@Url.Action("GetCustomerAsync")' + "?customerId=" + customerId + "&email=" + email,
                contentType: "application/json; charset=utf-8",
                dataType: "json",
                contentType: "application/json; charset=utf-8",
                success: function (data) {
                    $('.clientCallResult').text(data)
                },
                error: function (data) {
                    $('.clientCallResult').text(data)
                }
            });
        });
    });

</script>